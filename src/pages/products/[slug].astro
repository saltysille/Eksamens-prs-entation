---
import Mainlayout from "../../layouts/Mainlayout.astro";
import Insta from "../../components/Insta.astro";
import Related from "../../components/Related.astro";


/* STEP 1 - hente / fetche data fra Superbase  */

// funktion til at generere statiske stier og props baseret på API
// await bruges til at vente på, at fetch-operationen fuldføres, før programmet fortsætter.
// API nøgle gir adgang til data 

export async function getStaticPaths() {
  // laver en statisk side / path
  const data = await fetch(
    "https://uiovvvgmjftrkbiogyqx.supabase.co/rest/v1/products",
    {
      method: "GET",
      headers: {
        apikey:
          "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVpb3Z2dmdtamZ0cmtiaW9neXF4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDExMTU1MzUsImV4cCI6MjAxNjY5MTUzNX0.K1gnnZYV5aWSc4jzhiX1H2-WIcr2JXnmrj1BylbJRf0",
      },
    }
  ).then((response) => response.json());

  console.log("Data from API:", data);
  // for at se data fra API - er i terminalen

/* STEP 2 */

 // return laver statisk underside ud fra den database - eks. acne sko, som man har klikket på listeview. Slug hedder det også i Superbase
  // props = myData er det samme som product
  return data.map((product) => {
    return {
      params: { slug: String(product.slug) },
      props: { myData: product },
    };
  });
}

/* Metadata til SEO */

// Her oprettes en variabel kaldet metadesc, som indeholder en beskrivelse (meta description) 

const { myData } = Astro.props;
const metadesc =
  "Eksklusivt vintagefund! Bæredygtigt secondhand tøj til salg. Unikke sæsonvarer – Køb nu!";
const title = myData.brand;
---


<Mainlayout title={title} metadesc={metadesc}>
  <section class="product-section">

<!-- VIL GIVE MENING AT LAVE EN KOMPONENT HER  -->

    <a class="backbtn" href="/listeview/">
      Tilbage
     <!--  <svg
        width="40"
        height="32"
        viewBox="0 0 40 32"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M4.93934 10.9393C4.35355 11.5251 4.35355 12.4749 4.93934 13.0607L14.4853 22.6066C15.0711 23.1924 16.0208 23.1924 16.6066 22.6066C17.1924 22.0208 17.1924 21.0711 16.6066 20.4853L8.12132 12L16.6066 3.51472C17.1924 2.92893 17.1924 1.97919 16.6066 1.3934C16.0208 0.807614 15.0711 0.807614 14.4853 1.3934L4.93934 10.9393ZM36 10.5L6 10.5L6 13.5L36 13.5L36 10.5Z"
          fill="#7A1C44"></path>
      </svg> -->
    </a>
  

    <div class="container">

      <!-- Search SVG -->
 
     
      <div class="search-svg-container">
        <img class="search-svg" src="/public/search.svg" alt="search button">
        </div>
      
     
      <div class="image-container">
       
  
       
        <!-- billeder med alt-text -->
        {
          myData.images.map((image, index) => (
            <div id={`image-${index + 1}`} key={index} class="popup-trigger">
             <img src={image} alt={myData.alttext} />
            </div>
          ))
        }
      </div>

      
      <div class="image-container2">
       
       
  <!-- BILLEDER MED ALT-TEKST -->
   <!-- <div id={image-${index + 1}} key={index} >. 
        1. Dette opretter et div-element for hvert billede. 
        2. id bliver sat til en unik værdi baseret på billedets position/ index i listen. 
        3. key er nødvendig for at hjælpe med at identificere hver unikke div under renderingen
    -->
 
        {
          myData.images.map((image, index) => (
            <div id={`image-${index + 1}`} key={index}>
             <img src={image} alt={myData.alttext} />       
            <div class="image-wrapper" style={{ backgroundImage: `url(${image})` }}>
             <div class="arrow left"> </div>
      <div class="arrow right"></div>
    </div>
    </div>
           
          ))
        }
      </div>

      <div class="text-container" id="sticky-text-container">
        <h1>{myData.brand_front}</h1>
        <h2>{myData.price}</h2>
        <div class="btn-container">
  
  <!-- UDSOLGT ELLER EJ
    1. myData.soldout_1 :  Koden tjekker, om myData.soldout_1 eksisterer (myData.soldout_1 &&). 
    Hvis det gør, vises en <h4> (underskrift) med klassen "soldout".

    2. soldout med lille 
    myData.soldout_1.toLowerCase() === "soldout", vises teksten "Sold Out", ellers vises indholdet af myData.soldout_1 
    Der står både lille og småt soldout Soldout

    3. myData.price = tjekker, om myData.price eksisterer og ikke er markeret som "soldout".
    Hvis dette er tilfældet, vises en knap (<button>) med klassen "btn" og teksten "SHOP" indeni.

      DVS: hvis kun knap , hvis produktet er markeret som soldout i databasen
  -->
          {
            myData.soldout_1 && (
              <h4 class="soldout">
                {myData.soldout_1.toLowerCase() === "soldout"
                  ? "Sold Out"
                  : myData.soldout_1}
              </h4>
            )
          }

          {
            myData.price && myData.price.toLowerCase() !== "soldout" && (
              <button className="btn" type="button" name="btn">
                <p>SHOP</p>
              </button>
            )
          }
        </div>
        <div class="info_copy">
          <p>Flot tøj fra brand.</p>
        </div>
        <div class="info">
          <h3>STØRRELSE: {myData.size}</h3>
          <h3>MÆRKE: {myData.brand}</h3>
          <h3>MATERIALE: {myData.material}</h3>
          <h3>STAND: {myData.condition}</h3>
        </div>
        <div class="model">
          <p><strong>MODEL</strong></p>
          <p>HØJDE: 180cm</p>
          <p>STØRRELSE: XS - S</p>
          <div class="vintage-text">
            <p>
              <em
                >Secondhand varer kan have små fejl / patina på grund af
                tidligere liv hos tidligere ejere.</em>
            </p>
          </div>
        </div>
      </div>
    </div>

  </section>

 


<Insta />
<Related />
</Mainlayout>



<style>

.search-svg-container {
  position: absolute;
  top: 30px;
  right: 30px;
  cursor: pointer;
}

.search-svg {
  width: 24px; /* Adjust the width as needed */
  height: 24px; /* Adjust the height as needed */
  fill: var(--cta-text); /* Change the fill color as needed */
}

.search-svg:hover {
  opacity: 0.7;
}

/* ... (remaining styles) */



.arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  font-size: 24px;
  color: var( --cta-text);
  cursor: pointer;
  transition: opacity 0.3s;
}

.arrow:hover {
  opacity: 0.7;
}

.left {
  background-image:url(/public/arrowleft.svg);
  background-repeat: no-repeat;
  background-size: contain; 
 /*  left: 25px;
  top: 350px;
  font-size: 2rem; */
  left: 25px;
  width: 5%;
  height: 10%;
  top: 380px;
  opacity: 0.2; 
}

.right {
  right: 25px;
  top: 370px;
  font-size: 2rem;
  background-image:url(/public/arrowright.svg);
  background-repeat: no-repeat;
  background-size: contain; 
  right: 25px;
  width: 5%;
  height: 10%;
  top: 380px;
  opacity: 0.2; 
}
/* FIRST */
  
.container{
  position: relative;
            width: 100%;
            max-width: 1700px; /* Adjust the width as needed */
            overflow: hidden;
}
.image-container {
   /*  display: flex; */
    justify-content: center;
    align-items: center;
    overflow: hidden;
   /*  padding: 10px; */
  }

  .image-container img {
    max-width: 100%;
    height: auto;
  }

.image-container div:not(:first-child):not(.search-svg-container) {
    display: none;
  } 

  .image-container2{
    display: flex; 
    justify-content: center;
    align-items: center;
    overflow: hidden;
    /* padding: 10px; */
    padding-left: 10px;
    padding-right: 10px;
  }

  .image-container2 img {
    width: 100%;
    height: auto;
  }



  .image-container2 #image-1{
    opacity: 0.5; /* Adjust the opacity value as needed (0 to 1) */
}

  /* TEST SLUT */


  h1 {
    font-family: var(--font-family-roman);
    font-size: 25px;
    font-weight: 100;
  }

  h2 {
    font-family: var(--font-family-light);
    font-size: 20px;
    padding-bottom: 20px;
    font-weight: 100;
  }

  p {
    font-family: var(--font-family-light);
    font-size: 17px;
  }
  .info_copy p {
    padding: 20px;
    text-align: center;
  }

  h3 {
    font-family: var(--font-family-light);
    font-size: 18px;
    font-weight: 100;
  }
  p {
    font-weight: 100;
  }

  .soldout {
    color: var(--cta-text);
    font-size: 20px;
  }
  button {
    font-size: 18px;
    background-color: var(--cta-text);
    border: 2px solid var(--cta-text);
    padding: 10px 110px;
    cursor: pointer;
    letter-spacing: 1px;
    transition:
      background-color 0.3s,
      color 0.3s;
  }

  button p {
    color: var(--secondary-color);
  }

  

  svg {
    display: block;
    top: 10%;
    left: 3%;
    scale: 80%;
    color: var(--cta-text);
    text-decoration: none;
    cursor: pointer;
    position: absolute;
  }

  .product-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: left;
    gap: 5px;
  }

  .image-container {
    overflow-y: auto;
    max-height: auto;
    width: 100%;
    scrollbar-width: thin;
    padding: 10px;
  }

  img {
    width: 100%;
    height: auto;
    
  }
  .vintage-text,
  .vintage-text p {
    margin-top: 4rem;
    text-align: center;
    font-size: 16px;
  }
  .vintage-text {
    border-bottom: 0.5px solid var(--cta-text);
    padding-bottom: 80px;
  }

  .info,
  .model {
    padding-bottom: 10px;
    line-height: 2rem;
    text-align: left;
    margin: 34px 45px;
  }
  .text-container {
    text-align: center;
    margin-top: 10px;
  }

  .backbtn {
    text-decoration: underline;
    color: var(--cta-text);
    margin-left: -314px;
  }

  .backbtn:hover{
    color: var(--primary-);
  }
  @media only screen and (min-width: 768px) {

    .backbtn {
    margin-left: 0;
  }

    .arrow{
      display: none;
    }

    button {
    font-size: 18px;
    background-color: transparent;
    border: 2px solid var(--cta-text);
    padding: 10px 110px;
    cursor: pointer;
    letter-spacing: 1px;
    transition:
      background-color 0.3s,
      color 0.3s;
  }

  button p {
    color: var(--cta-text);
  }

  button:hover {
    background-color: var(--cta-text);
    color: white;
    border: 2px solid transparent;
  }

  button:hover p {
    color: white;
  }

    .image-container div:not(:first-child) {
    display: block;
  } 

    .image-container2{
    display: none;
  }
    .product-section {
      margin-top: 150px;
    }
    .text-container {
      text-align: left;
      flex: 1;
      top: 0;
      padding: 20px;
      box-sizing: border-box;
    }
    button p {
      font-size: 20px;
    }

    .container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 150px;
      max-width: 1200px;
    }

    .image-container {
      overflow-y: auto;
      max-height: 100vh;
      scrollbar-width: thin;
      width: 100%;
      flex: 1;
    
    }



    .btn-container {
      justify-content: start;
      margin-top: 40px;
      padding-bottom: 30px;
    }
    .info_copy p {
      margin-top: 40px;
      margin-bottom: 40px;
      text-align: start;
      padding: 0;
    }
    h1 {
      padding-bottom: 10px;
      padding-top: 60px;
      text-align: left;
    }

    h2 {
      padding-bottom: 30px;
      text-align: left;
    }
    img {
      width: 100%;
      height: auto;
      padding-bottom: 20px;
    }

    .info,
    .model {
      line-height: 2rem;
      text-align: left;
      padding: 2px;
      margin: 0;
    }
    p {
      font-size: 15px;
    }
    .info {
      padding-bottom: 50px;
      padding-top: 1rem;
    }
    .vintage-text {
      padding-top: 50px;
      padding-bottom: 30px;
      text-align: left;
    }
    .vintage-text p {
      text-align: left;
      font-size: 13.5px;
    }
    svg {
      display: block;
      top: 13%;
      left: 19%;
    }
  }
</style>




